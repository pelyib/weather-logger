name: Build and Push Docker Image to GitHub Packages

on:
  push:
    branches:
      - master
    tags:
      - '*'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}


jobs:
  releases-matrix:
    name: Release Docker image with GO binary
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    strategy:
      matrix:
        app: [commander, http, logger]
    steps:
    - uses: actions/checkout@v4
    - name: Determine Docker image tag
      id: tag
      run: |
        if [ "${{ github.ref_type }}" == "tag" ]; then
          echo "TAG=${{ github.ref_name }}" >> $GITHUB_ENV
        else
          echo "TAG=latest" >> $GITHUB_ENV
        fi
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Log in to the Container registry
      uses: docker/login-action@v3.3.0
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v5.5.1
      with:
        images: ${{ env.REGISTRY }}/pelyib/wl-${{ matrix.app }}
        labels: |
          org.opencontainers.image.title=Weather logger - ${{ matrix.app }}
          org.opencontainers.image.description=A GO app to find out how accurate weather forecasts are.
          org.opencontainers.image.vendor=pelyib
    - name: Build and push Docker image
      id: push
      uses: docker/build-push-action@v6.7.0
      with:
        platforms: linux/386,linux/amd64,linux/arm/v7,linux/arm64
        build-args: APP=${{ matrix.app }}
        context: .
        file: ./docker/Dockerfile
        target: app
        push: true
        tags: ${{ env.REGISTRY }}/pelyib/wl-${{ matrix.app }}:${{ env.TAG }}
        labels: ${{ steps.meta.outputs.labels }}
    - name: Generate artifact attestation
      uses: actions/attest-build-provenance@v1
      with:
        subject-name: ${{ env.REGISTRY }}/pelyib/wl-${{ matrix.app }}
        subject-digest: ${{ steps.push.outputs.digest }}
        push-to-registry: true
